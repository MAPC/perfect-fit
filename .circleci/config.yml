# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  ruby: circleci/ruby@2.0.1
  aws-cli: circleci/aws-cli@4.0.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2
    executor: ruby/default
    steps:
      - run:
          name: Install Python
          command: sudo apt-get update && sudo apt-get install -y python3 python-is-python3 python3.10-venv
      - add_ssh_keys:
          fingerprints:
          - "9a:29:68:ac:a9:9f:56:3b:87:1a:b5:e8:f7:9c:a5:71"
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - ruby/install-deps
      - run:
          name: Build static site with Jekyll
          command: bundle exec jekyll build
      - aws-cli/setup
      - run:
              name: AWS whitelist add CircleCI IP
              command: |
                  
                  # Get the public ip address
                  LATEST_IP=$(wget -qO- http://checkip.amazonaws.com)
                  IP="${IP-$LATEST_IP}"
                  if [[ "${IP}" == "" ]]; then
                    echo "Could not find your public IP"
                    exit 1
                  fi

                  GROUPID=sg-e9bc309e
                  [[ -n "${GROUPID}" ]] || (echo "Could not determine Security Group ID" && exit 0);
                                                      
                  # Adding Rule SSH to Your Security Group
                  echo Allowing CircleCI Build to access port 22 from IP $IP to the security group $GROUPID
                  aws ec2 authorize-security-group-ingress --group-id $GROUPID --ip-permissions '[{"IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "IpRanges": [{"CidrIp": "'$LATEST_IP/32'", "Description": "'CircleCI_Build'"}]}]'                 
      - run:
          name: Move build artifacts to staging server
          command: scp -r _site/* perfect-fit@prep.mapc.org:/var/www/perfect-fit
      

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  staging-build-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
